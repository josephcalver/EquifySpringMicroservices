version: '2.1'

volumes:
  postgres_local:
    driver: local
  esdata1:
    driver: local

services:

  database:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "equify_db"
    volumes:
      - ./equify_db.sql:/docker-entrypoint-initdb.d/equify_db.sql
#      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      backend:
        aliases:
          - "zookeeper"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=companyChangeTopic:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      backend:
        aliases:
          - "kafka"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379
    networks:
      backend:
        aliases:
          - "redis"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      backend:
        aliases:
          - "elasticsearch"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    depends_on:
      elasticsearch:
        condition: service_started
    networks:
      backend:
        aliases:
          - "logstash"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    depends_on:
      logstash:
        condition: service_started
    networks:
      backend:
        aliases:
          - "kibana"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    depends_on:
      elasticsearch:
        condition: service_started
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9300
    ports:
      - "9411:9411"
    networks:
      backend:
        aliases:
          - "zipkin"

  eurekaserver:
    image: equify/eureka-server:0.0.1-SNAPSHOT
    ports:
      - "8761:8761"
    depends_on:
      database:
        condition: service_healthy
#      configserver:
#        condition: service_started
    environment:
      - WAIT_BEFORE_HOSTS=30
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=10
    networks:
      backend:
        aliases:
          - "eurekaserver"

  configserver:
    image: equify/config-server:0.0.1-SNAPSHOT
    ports:
      - "8888:8888"
    depends_on:
#      database:
#        condition: service_healthy
      eurekaserver:
        condition: service_started
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
      - ENCRYPT_KEY=fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo
      - WAIT_BEFORE_HOSTS=35
      - WAIT_HOSTS=eurekaserver:8761
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=10
    networks:
      backend:
        aliases:
          - "configserver"

  dealsservice:
    image: equify/deals-service:0.0.1-SNAPSHOT
    ports:
      - "8180:8080"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
      kafka:
        condition: service_started
      logstash:
        condition: service_started
      elasticsearch:
        condition: service_started
      kibana:
        condition: service_started
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka/
#      CONFIGSERVER_PORT:   "8888"
#      DATABASESERVER_PORT: "5433"
      ENCRYPT_KEY: fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo
      WAIT_BEFORE_HOSTS: 45
      WAIT_HOSTS: configserver:8888, kafka:9092, zookeeper:2181 #, logstash:5000
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 5
      WAIT_HOST_CONNECT_TIMEOUT: 10
    networks:
      backend:
        aliases:
          - "dealsservice"

  companiesservice:
    image: equify/companies-service:0.0.1-SNAPSHOT
    ports:
      - "8085:8085"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8888"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka/
      #      EUREKASERVER_URI: "http://eurekaserver:8761/eureka/"
#      CONFIGSERVER_PORT:   "8888"
#      DATABASESERVER_PORT: "5433"
      ENCRYPT_KEY: fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo
      WAIT_BEFORE_HOSTS: 50
      WAIT_HOSTS: dealsservice:8080
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 5
      WAIT_HOST_CONNECT_TIMEOUT: 10
    networks:
      backend:
        aliases:
          - "companiesservice"

  gatewayserver:
    image: equify/gateway-server:0.0.1-SNAPSHOT
    ports:
      - "5555:5555"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
      dealsservice:
        condition: service_started
      companiesservice:
        condition: service_started
    command: sh -c "/wait && java -jar /app.jar"
    environment:
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_CLOUD_CONFIG_URI: http://configserver:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8761/eureka/
      ENCRYPT_KEY: fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo
      #      EUREKASERVER_PORT: "8070"
      #      CONFIGSERVER_PORT: "8071"
      WAIT_BEFORE_HOSTS: 55
      WAIT_HOSTS: companiesservice:8085
      WAIT_HOSTS_TIMEOUT: 600
      WAIT_SLEEP_INTERVAL: 5
      WAIT_HOST_CONNECT_TIMEOUT: 10
    networks:
      backend:
        aliases:
          - "gatewayserver"



# AUTHENTICATION SECTION
#
#  postgres:
#    image: postgres
#    volumes:
#      - postgres_local:/var/lib/postgresql/data
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: keycloak
#    networks:
#      backend:
#        aliases:
#          - "postgres"
#
#  keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    environment:
#      DB_VENDOR: POSTGRES
#      DB_ADDR: postgres
#      DB_DATABASE: keycloak
#      DB_USER: keycloak
#      DB_SCHEMA: public
#      DB_PASSWORD: keycloak
#      KEYCLOAK_USER: admin
#      KEYCLOAK_PASSWORD: admin
#      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
#      #JDBC_PARAMS: "ssl=true"
#    ports:
#      - 8080:8080
#    depends_on:
#      - postgres
#    networks:
#      backend:
#        aliases:
#          - "keycloak"

networks:
  backend:
    driver: bridge
